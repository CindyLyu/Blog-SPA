{"version":3,"sources":["components/List.js","WebAPI.js","containers/ListContainer.js","actions.js","components/CodeBlock.js","components/Article.js","containers/ArticleContainer.js","components/About.js","components/AddPost.js","containers/AddPostContainer.js","App.js","serviceWorker.js","reducer.js","actionTypes.js","index.js","background-image.jpg"],"names":["List","getPostList","this","props","prevProps","isLoadingGetPostList","error","alert","history","postList","className","src","require","alt","map","item","key","id","onClick","push","title","body","Component","axios","baseUrl","updatePost","postId","author","put","createPost","post","withRouter","connect","state","dispatch","type","payload","get","CodeBlock","language","value","style","prism","PureComponent","defaultProps","Article","handleEditSwitch","isEdit","getPost","setState","handleDelete","deletePost","window","confirm","handleInputChange","e","target","name","handleEditSubmit","preventDefault","match","params","isLoadingDeletePost","isLoadingUpdatePost","onChange","source","renderers","code","isLoadingGetPost","Actions","delete","webAPI","About","AddPost","handleSubmit","isLoadingCreatePost","console","log","method","placeholder","App","basename","to","exact","path","component","render","updataState","updateState","AddArticle","Boolean","location","hostname","reducer","globalState","action","data","store","createStore","applyMiddleware","promiseMiddleware","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.034b1034.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nclass List extends Component {\n  componentDidMount() {\n    const { getPostList } = this.props;\n    getPostList();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoadingGetPostList, error } = this.props;\n    if (prevProps.isLoadingGetPostList !== isLoadingGetPostList && !isLoadingGetPostList) {\n      if (error) {\n        alert('讀取資料失敗，請稍後再試');\n      }\n    }\n  }\n\n  render() {\n    const { history, postList } = this.props;\n    return (\n      <Router>\n        <img className=\"blog__list-img\" src={require('../background-image.jpg')} alt=\"substitute\" />\n        <section className=\"blog__list\">\n          <div className=\"blog__list-title\">\n            <span className=\"fas fa-list-ul\" />\n              文章列表\n          </div>\n          {\n            postList.map(item => (\n              <div className=\"blog__list-body\" key={item.id} onClick={() => { history.push(`/post/${item.id}`); }}>\n                <div className=\"blog__list-body-title\">{item.title}</div>\n                <div className=\"blog__list-body-line\" />\n                <div className=\"blog__list-body-content\">{item.body}</div>\n                <div className=\"blog__list-readmore\">Read more</div>\n              </div>\n            ))\n          }\n        </section>\n      </Router>\n    );\n  }\n}\n\n\nexport default List;\n","const axios = require('axios');\n\nconst baseUrl = 'https://qootest.com/posts/';\n\nexport const getPosts = () => axios.get(`${baseUrl}?_sort=id&_order=desc`);\n\nexport const getPost = postId => axios.get(`${baseUrl}${postId}`);\n\nexport const updatePost = (postId, title, author, body) => axios.put(`${baseUrl}${postId}`, {\n                                                              title,\n                                                              author,\n                                                              body,\n                                                            });\n\nexport const deletePost = postId => axios.delete(`${baseUrl}${postId}`);\n\nexport const createPost = (title, author, body) => axios.post(`${baseUrl}`, {\n                                                      title,\n                                                      author,\n                                                      body,\n                                                    });\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport List from '../components/List';\nimport * as Actions from '../actions';\n\n\nconst ListContainer = props => <List {...props} />;\n\nconst mapStateToProps = state => ({\n  isLoadingGetPostList: state.isLoadingGetPostList,\n  postList: state.postList,\n  error: state.error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPostList: () => {\n    dispatch(Actions.getPostList());\n  },\n});\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListContainer));\n","import * as webAPI from './WebAPI';\n\n// action creators\nexport const getPostList = () => ({\n  type: 'GET_POST_LIST',\n  payload: webAPI.getPosts(),\n});\n\nexport const getPost = id => ({\n  type: 'GET_POST',\n  payload: webAPI.getPost(id),\n});\n\nexport const deletePost = id => ({\n  type: 'DELETE_POST',\n  payload: webAPI.deletePost(id),\n});\n\nexport const updatePost = (id, title, author, body) => ({\n  type: 'UPDATE_POST',\n  payload: webAPI.updatePost(id, title, author, body),\n});\n\nexport const createPost = (title, author, body) => ({\n  type: 'CREATE_POST',\n  payload: webAPI.createPost(title, author, body),\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\n// 設置高亮樣式\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\n// 設置高亮的語言\n// import { jsx, javascript } from 'react-syntax-highlighter/dist/esm/languages/prism';\n\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string,\n  };\n\n  static defaultProps = {\n    language: null,\n  };\n\n  // componentDidMount() {\n  //   SyntaxHighlighter.registerLanguage('jsx', jsx);\n  //   SyntaxHighlighter.registerLanguage('javascript', javascript);\n  // }\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <figure className=\"highlight\">\n        <SyntaxHighlighter language={language} style={prism}>\n          {value}\n        </SyntaxHighlighter>\n      </figure>\n    );\n  }\n}\n\n\nexport default CodeBlock;\n","/* eslint-disable react/prop-types */\n\nimport React, { Component, Fragment } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\n\n\nclass Article extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: [],\n      isEdit: false,\n    };\n  }\n\n  componentDidMount() {\n    const { match, post, getPost } = this.props;\n    const id = match.params.postId;\n    getPost(id);\n    this.setState({\n      post,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      history, error, isLoadingDeletePost, isLoadingUpdatePost, post,\n    } = this.props;\n    if (prevProps.post !== post) {\n      this.setState({\n        post,\n      });\n    }\n    if (prevProps.isLoadingDeletePost !== isLoadingDeletePost && !isLoadingDeletePost) {\n      if (error) {\n        alert('刪除失敗，請稍後再試');\n      } else {\n        history.push('/post');\n        alert('刪除成功');\n      }\n    }\n    if (prevProps.isLoadingUpdatePost !== isLoadingUpdatePost && !isLoadingUpdatePost) {\n      if (error) {\n        alert('更新失敗，請稍後再試');\n      } else {\n        this.setState({\n          isEdit: false,\n        });\n      }\n    }\n  }\n\n  handleEditSwitch = (type) => {\n    const { isEdit } = this.state;\n    const { post, getPost } = this.props;\n    getPost(post.id); // dispatch 讓 post 資料更新\n    if (type === 'cancel') {\n      this.setState({\n        post,\n      });\n    }\n    this.setState({\n      isEdit: !isEdit,\n    });\n  }\n\n  handleDelete = () => {\n    const { post, deletePost } = this.props;\n    if (window.confirm('確定要刪除嗎')) {\n      deletePost(post.id);\n    }\n  }\n\n  handleInputChange = (e) => {\n    const { post } = this.state;\n    const { value, name } = e.target;\n    this.setState({\n      post: { ...post, [name]: value },\n    });\n  }\n\n  handleEditSubmit = (e) => {\n    e.preventDefault();\n    const { post } = this.state;\n    const { updatePost } = this.props;\n    updatePost(post.id, post.title, post.author, post.body);\n  }\n\n  render() {\n    const { isEdit, post } = this.state;\n    return (\n      <Fragment>\n        <img className=\"blog__article-img\" src=\"https://fakeimg.pl/1600x600/dbdbdb/?text=picture&font=bebas\" alt=\"substitute\" />\n        <section className=\"blog__article\">\n          <div className=\"blog__article-action\">\n            { isEdit\n              ? <button className=\"blog__article-canceledit\" onClick={() => this.handleEditSwitch('cancel')}>取消編輯</button>\n              : (\n                <div>\n                  <button className=\"blog__article-edit\" onClick={this.handleEditSwitch}>\n                    <i className=\"far fa-edit\" />\n                    編輯\n                  </button>\n                  <button className=\"blog__article-delete\" onClick={this.handleDelete}>\n                    <i className=\"far fa-trash-alt\" />\n                    刪除\n                  </button>\n                </div>\n              )\n            }\n          </div>\n          { isEdit\n            ? (\n              <Fragment>\n                <div>\n                標題：\n                  <input className=\"blog__article-edittitle\" name=\"title\" value={post.title} onChange={this.handleInputChange} />\n                </div>\n                <div>\n                作者：\n                  <input className=\"blog__article-editauthor\" name=\"author\" value={post.author} onChange={this.handleInputChange} />\n                </div>\n                <div>\n                內容：\n                  <textarea className=\"blog__article-editbody\" name=\"body\" value={post.body} onChange={this.handleInputChange} />\n                </div>\n                <button className=\"blog__article-editsubmit\" type=\"submit\" onClick={this.handleEditSubmit}>送出</button>\n              </Fragment>\n            )\n            : (\n              <Fragment>\n                <div className=\"blog__article-title\">{ post.title ? post.title : 'Loading...' }</div>\n                <div className=\"blog__article-author\">\n                  <i className=\"fas fa-user\" />\n                  {post.author ? post.author : '匿名'}\n                </div>\n                <div className=\"blog__article-body\">\n                  <ReactMarkdown source={post.body} renderers={{ code: CodeBlock }} />\n                </div>\n              </Fragment>\n            )\n          }\n        </section>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default Article;\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Article from '../components/Article';\nimport * as Actions from '../actions';\n\n\nconst ArticleContainer = props => <Article {...props} />;\n\nconst mapStateToProps = state => ({\n  isLoadingGetPost: state.isLoadingGetPost,\n  isLoadingDeletePost: state.isLoadingDeletePost,\n  isLoadingUpdatePost: state.isLoadingUpdatePost,\n  post: state.post,\n  error: state.error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPost: (id) => {\n    dispatch(Actions.getPost(id));\n  },\n  deletePost: (id) => {\n    dispatch(Actions.deletePost(id));\n  },\n  updatePost: (id, title, author, body) => {\n    dispatch(Actions.updatePost(id, title, author, body));\n  },\n});\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ArticleContainer));\n","import React, { Fragment } from 'react';\n\n\nfunction About() {\n  return (\n    <Fragment>\n      <section className=\"blog__about\">\n        <img className=\"blog__about-img\" src=\"https://fakeimg.pl/1200x1200/dbdbdb/?text=picture&font=bebas\" alt=\"station\" />\n        <div className=\"blog__about-content\">哩後，關於我關於我關於我甘魚我</div>\n      </section>\n    </Fragment>\n  );\n}\n\n\nexport default About;\n","import React, { Fragment, Component } from 'react';\n\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      author: '',\n      body: '',\n    };\n  }\n\n  handleInputChange = (e) => {\n    const { value } = e.target;\n    const { name } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { createPost } = this.props;\n    const { title, author, body } = this.state;\n    createPost(title, author, body);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { history, isLoadingCreatePost, error } = this.props;\n    if (prevProps.isLoadingCreatePost !== isLoadingCreatePost && !isLoadingCreatePost) {\n      if (error) {\n        alert('新增失敗，請稍後再試');\n        console.log(error);\n      } else {\n        alert('新增成功');\n        history.push('/post');\n      }\n    }\n  }\n\n  render() {\n    const { title, author, body } = this.state;\n    return (\n      <Fragment>\n        <form className=\"blog__addpost\" method=\"POST\">\n          <div className=\"blog__addpost-title\">\n            <i className=\"far fa-plus-square\" />\n              新增文章\n          </div>\n          <div>\n            標題：\n            <input className=\"blog__addpost-articletitle\" placeholder=\"輸入文章標題\" name=\"title\" value={title} onChange={this.handleInputChange} />\n          </div>\n          <div>\n            作者：\n            <input className=\"blog__addpost-author\" placeholder=\"輸入你的大名\" name=\"author\" value={author} onChange={this.handleInputChange} />\n          </div>\n          <div>\n            內容：\n            <textarea className=\"blog__addpost-body\" placeholder=\"文章內容\" name=\"body\" value={body} onChange={this.handleInputChange} />\n          </div>\n          <br />\n          <button className=\"blog__addpost-submit\" type=\"submit\" onClick={this.handleSubmit}>送出</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default AddPost;\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AddPost from '../components/AddPost';\nimport * as Actions from '../actions';\n\n\nconst AddPostContainer = props => <AddPost {...props} />;\n\nconst mapStateToProps = state => ({\n  isLoadingCreatePost: state.isLoadingCreatePost,\n  error: state.error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createPost: (title, author, body) => {\n    dispatch(Actions.createPost(title, author, body));\n  },\n});\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddPostContainer));\n","import React, { Component } from 'react';\nimport './index.sass';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport List from './containers/ListContainer';\nimport Article from './containers/ArticleContainer';\nimport About from './components/About';\nimport AddArticle from './containers/AddPostContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"Blog-SPA\">\n        <main className=\"blog\">\n          <nav className=\"blog__nav\">\n            <Link className=\"blog__nav-name\" to=\"/\" exact=\"true\">LYU</Link>\n            <Link className=\"blog__nav-about\" to=\"about\" exact=\"true\">About</Link>\n            <Link className=\"blog__nav-list\" to=\"/post\" exact=\"true\">List</Link>\n            <Link className=\"blog__nav-addpost\" to=\"/addpost\" exact=\"true\">Add Post</Link>\n          </nav>\n          <Route exact path=\"/\" component={List} />\n          <Route exact path=\"/post\" component={List} />\n          <Route path=\"/about\" component={About} />\n          <Route\n            path=\"/post/:postId\"\n            render={() => <Article updataState={this.updateState} />}\n          />\n          <Route path=\"/addpost\" component={AddArticle} />\n        </main>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionTypes from './actionTypes';\n\nconst state = {\n  postList: [],\n  post: {},\n  error: '',\n  isLoadingGetPostList: false,\n  isLoadingGetPost: false,\n  isLoadingDeletePost: false,\n  isLoadingCreatePost: false,\n  isLoadingUpdatePost: false,\n};\n\nconst reducer = (globalState = state, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_POST_LIST_PENDING:\n      return {\n        ...globalState,\n        isLoadingGetPostList: true,\n      };\n    case ActionTypes.GET_POST_LIST_FULFILLED:\n      return {\n        ...globalState,\n        isLoadingGetPostList: false,\n        postList: action.payload.data,\n      };\n    case ActionTypes.GET_POST_LIST_REJECTED:\n      return {\n        ...globalState,\n        isLoadingGetPostList: false,\n        error: action.payload,\n      };\n    case ActionTypes.GET_POST_PENDING:\n      return {\n        ...globalState,\n        isLoadingGetPost: true,\n        post: {}, // 如果有資料時，讓在更新中途不會先顯示舊資料\n      };\n    case ActionTypes.GET_POST_FULFILLED:\n      return {\n        ...globalState,\n        isLoadingGetPost: false,\n        post: action.payload.data,\n      };\n    case ActionTypes.DELETE_POST_PENDING:\n      return {\n        ...globalState,\n        isLoadingDeletePost: true,\n      };\n    case ActionTypes.DELETE_POST_FULFILLED:\n      return {\n        ...globalState,\n        isLoadingDeletePost: false,\n      };\n    case ActionTypes.DELETE_POST_REJECTED:\n      return {\n        ...globalState,\n        isLoadingDeletePost: false,\n        error: action.payload,\n      };\n    case ActionTypes.CREATE_POST_PENDING:\n      return {\n        ...globalState,\n        isLoadingCreatePost: true,\n      };\n    case ActionTypes.CREATE_POST_FULFILLED:\n      return {\n        ...globalState,\n        isLoadingCreatePost: false,\n      };\n    case ActionTypes.CREATE_POST_REJECTED:\n      return {\n        ...globalState,\n        isLoadingCreatePost: false,\n        error: action.payload,\n      };\n    case ActionTypes.UPDATE_POST_PENDING:\n      return {\n        ...globalState,\n        isLoadingUpdatePost: true,\n      };\n    case ActionTypes.UPDATE_POST_FULFILLED:\n      return {\n        ...globalState,\n        isLoadingUpdatePost: false,\n      };\n    case ActionTypes.UPDATE_POST_REJECTED:\n      return {\n        ...globalState,\n        isLoadingUpdatePost: false,\n        error: action.payload,\n      };\n    default:\n      return globalState;\n  }\n};\n\nexport default reducer;\n","export const GET_POST_LIST_PENDING = 'GET_POST_LIST_PENDING';\nexport const GET_POST_LIST_FULFILLED = 'GET_POST_LIST_FULFILLED';\nexport const GET_POST_LIST_REJECTED = 'GET_POST_LIST_REJECTED';\nexport const GET_POST_PENDING = 'GET_POST_PENDING';\nexport const GET_POST_FULFILLED = 'GET_POST_FULFILLED';\nexport const DELETE_POST_PENDING = 'DELETE_POST_PENDING';\nexport const DELETE_POST_FULFILLED = 'DELETE_POST_FULFILLED';\nexport const DELETE_POST_REJECTED = 'DELETE_POST_REJECTED';\nexport const CREATE_POST_PENDING = 'CREATE_POST_PENDING';\nexport const CREATE_POST_FULFILLED = 'CREATE_POST_FULFILLED';\nexport const CREATE_POST_REJECTED = 'CREATE_POST_REJECTED';\nexport const UPDATE_POST_PENDING = 'UPDATE_POST_PENDING';\nexport const UPDATE_POST_FULFILLED = 'UPDATE_POST_FULFILLED';\nexport const UPDATE_POST_REJECTED = 'UPDATE_POST_REJECTED';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport logger from 'redux-logger';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducer';\n\n\nconst store = createStore(reducer, applyMiddleware(promiseMiddleware, logger));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background-image.81b52042.jpg\";"],"sourceRoot":""}