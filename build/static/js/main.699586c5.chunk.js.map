{"version":3,"sources":["WebAPI.js","components/List.js","components/Article.js","components/About.js","components/AddPost.js","App.js","actions.js","actionTypes.js","serviceWorker.js","reducer.js","index.js","background-image.jpg"],"names":["axios","require","baseUrl","getPost","postId","get","putPost","title","author","body","put","deletePost","delete","addPost","post","BlogList","props","state","then","response","setState","data","reverse","this","history","className","src","alt","map","item","key","id","onClick","push","Component","withRouter","BlogArticle","handleEditSwitch","type","isEdit","handleDelete","window","confirm","alert","catch","err","console","log","handleInputChange","e","value","target","name","handleEditSubmit","preventDefault","location","pathname","replace","onChange","source","BlogAbout","handleSubmit","method","placeholder","App","handleChangePage","pageText","updatePage","page","basename","exact","path","component","List","About","render","Article","updataState","updateState","AddArticle","to","connect","dispatch","Boolean","hostname","match","localStorage","getItem","reducer","globalState","action","setItem","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"wOAAMA,EAAQC,EAAQ,IAEhBC,EAAU,6BAIHC,EAAU,SAAAC,GAAM,OAAIJ,EAAMK,IAAN,UAAaH,GAAb,OAAuBE,KAE3CE,EAAU,SAACF,EAAQG,EAAOC,EAAQC,GAAxB,OAAiCT,EAAMU,IAAN,UAAaR,GAAb,OAAuBE,GAAU,CAC/BG,MAAOA,EACPC,OAAQA,EACRC,KAAMA,KAGnDE,EAAa,SAAAP,GAAM,OAAIJ,EAAMY,OAAN,UAAgBV,GAAhB,OAA0BE,KAEjDS,EAAU,SAACN,EAAOC,EAAQC,GAAhB,OAAyBT,EAAMc,KAAK,4BAA6B,CACtCP,QACAC,SACAC,UCZ5CM,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXH,KAAM,IAHS,E,iFAOE,IAAD,ODXQd,EAAMK,IAAIH,GCajCgB,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAC9BN,KAAMK,EAASE,KAAKC,iB,+BAIhB,IACAR,EAASS,KAAKN,MAAdH,KACAU,EAAYD,KAAKP,MAAjBQ,QACR,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,iBAAiBC,IAAKzB,EAAQ,IAA4B0B,IAAI,eAC7E,6BAASF,UAAU,cACjB,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,mBADlB,4BAKIX,EAAKc,KAAI,SAAAC,GAAI,OACX,yBAAKJ,UAAU,kBAAkBK,IAAKD,EAAKE,GAAIC,QAAS,WAAQR,EAAQS,KAAR,gBAAsBJ,EAAKE,OACzF,yBAAKN,UAAU,yBAAyBI,EAAKtB,OAC7C,yBAAKkB,UAAU,yBACf,yBAAKA,UAAU,2BAA2BI,EAAKpB,MAC/C,yBAAKgB,UAAU,uBAAf,uB,GAhCKS,aA2CRC,cAAWpB,G,slBC1CpBqB,E,YACJ,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRqB,iBAAmB,SAACC,GAAU,IAAD,EACF,EAAKrB,MAAtBH,EADmB,EACnBA,KAAMyB,EADa,EACbA,OACD,WAATD,GACFnC,EAAQW,EAAKiB,IACVb,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAC9BN,KAAMK,EAASE,UAGrB,EAAKD,SAAS,CACZmB,QAASA,KA1BM,EA8BnBC,aAAe,WAAO,IACZhB,EAAY,EAAKR,MAAjBQ,QACAV,EAAS,EAAKG,MAAdH,KACJ2B,OAAOC,QAAQ,yCACjB/B,EAAWG,EAAKiB,IACbb,MAAK,WACJyB,MAAM,4BACNnB,EAAQS,KAAK,YAEdW,OAAM,SAACC,GACNF,MAAM,gEACNG,QAAQC,IAAIF,OAzCD,EA8CnBG,kBAAoB,SAACC,GAAO,IAClBnC,EAAS,EAAKG,MAAdH,KACAoC,EAAUD,EAAEE,OAAZD,MACAE,EAASH,EAAEE,OAAXC,KACR,EAAKhC,SAAS,CACZN,KAAK,EAAD,GAAOA,EAAP,eAAcsC,EAAOF,OAnDV,EAuDnBG,iBAAmB,SAACJ,GAClBA,EAAEK,iBADsB,IAEhBxC,EAAS,EAAKG,MAAdH,KACRR,EAAQQ,EAAKiB,GAAIjB,EAAKP,MAAOO,EAAKN,OAAQM,EAAKL,MAC5CmC,OAAM,SAACC,GACNF,MAAM,gEACNG,QAAQC,IAAIF,MAGhB,EAAKzB,SAAS,CACZmB,QAAQ,KA/DV,EAAKtB,MAAQ,CACXH,KAAM,GACNyB,QAAQ,GAJO,E,iFAQE,IAAD,OAEZR,EADcR,KAAKP,MAAjBQ,QACY+B,SAASC,SAAUC,QAAQ,SAAU,IACzDtD,EAAQ4B,GACLb,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAC9BN,KAAMK,EAASE,Y,+BAwDX,IAAD,SACkBE,KAAKN,MAAtBH,EADD,EACCA,KAAMyB,EADP,EACOA,OACd,OACE,kBAAC,WAAD,KACE,yBAAKd,UAAU,oBAAoBC,IAAI,8DAA8DC,IAAI,eACzG,6BAASF,UAAU,iBACjB,yBAAKA,UAAU,wBACXc,EACE,uBAAGd,UAAU,2BAA2BO,QAAS,kBAAM,EAAKK,iBAAiB,YAA7E,4BAEA,6BACE,4BAAQZ,UAAU,qBAAqBO,QAAST,KAAKc,kBACnD,uBAAGZ,UAAU,gBADf,gBAIA,4BAAQA,UAAU,uBAAuBO,QAAST,KAAKiB,cACrD,uBAAGf,UAAU,qBADf,kBAQNc,EACA,kDAEE,2BAAOd,UAAU,0BAA0B2B,KAAK,QAAQF,MAAOpC,EAAKP,MAAOmD,SAAUnC,KAAKyB,qBAE1F,yBAAKvB,UAAU,uBAAuBX,EAAKP,MAAQO,EAAKP,MAAQ,cAClEgC,EACA,kDAEE,2BAAOd,UAAU,2BAA2B2B,KAAK,SAASF,MAAOpC,EAAKN,OAAQkD,SAAUnC,KAAKyB,qBAG/F,yBAAKvB,UAAU,wBACb,uBAAGA,UAAU,gBACZX,EAAKN,OAASM,EAAKN,OAAS,gBAG/B+B,EACA,kDAEE,8BAAUd,UAAU,yBAAyB2B,KAAK,OAAOF,MAAOpC,EAAKL,KAAMiD,SAAUnC,KAAKyB,qBAE1F,yBAAKvB,UAAU,sBAAqB,kBAAC,IAAD,CAAekC,OAAQ7C,EAAKL,QAClE8B,EAAS,4BAAQd,UAAU,2BAA2Ba,KAAK,SAASN,QAAST,KAAK8B,kBAAzE,gBAAyG,W,GApHpGnB,aA4HXC,cAAWC,GCrHXwB,MAZf,WACE,OACE,kBAAC,WAAD,KACE,6BAASnC,UAAU,eACjB,yBAAKA,UAAU,kBAAkBC,IAAI,+DAA+DC,IAAI,YACxG,yBAAKF,UAAU,uBAAf,iGCHFmC,E,YACJ,WAAY5C,GAAQ,IAAD,8BACjB,4CAAMA,KAQRgC,kBAAoB,SAACC,GAAO,IAClBC,EAAUD,EAAEE,OAAZD,MACAE,EAASH,EAAEE,OAAXC,KACR,EAAKhC,SAAL,eACGgC,EAAOF,KAbO,EAiBnBW,aAAe,SAACZ,GACdA,EAAEK,iBADkB,IAEZ9B,EAAY,EAAKR,MAAjBQ,QAFY,EAGY,EAAKP,MAA7BV,EAHY,EAGZA,MAAOC,EAHK,EAGLA,OAAQC,EAHH,EAGGA,KACvBI,EAAQN,EAAOC,EAAQC,GACpBS,MAAK,WACJyB,MAAM,4BACNnB,EAAQS,KAAK,YAEdW,OAAM,SAACC,GACNF,MAAM,gEACNG,QAAQC,IAAIF,OA1BhB,EAAK5B,MAAQ,CACXV,MAAO,GACPC,OAAQ,GACRC,KAAM,IALS,E,sEAgCT,IAAD,EACyBc,KAAKN,MAA7BV,EADD,EACCA,MAAOC,EADR,EACQA,OAAQC,EADhB,EACgBA,KACvB,OACE,kBAAC,WAAD,KACE,0BAAMgB,UAAU,gBAAgBqC,OAAO,QACrC,yBAAKrC,UAAU,uBACb,uBAAGA,UAAU,uBADf,4BAIA,kDAEE,2BAAOA,UAAU,6BAA6BsC,YAAY,uCAASX,KAAK,QAAQF,MAAO3C,EAAOmD,SAAUnC,KAAKyB,qBAE/G,kDAEE,2BAAOvB,UAAU,uBAAuBsC,YAAY,uCAASX,KAAK,SAASF,MAAO1C,EAAQkD,SAAUnC,KAAKyB,qBAE3G,kDAEE,8BAAUvB,UAAU,qBAAqBsC,YAAY,2BAAOX,KAAK,OAAOF,MAAOzC,EAAMiD,SAAUnC,KAAKyB,qBAEtG,6BACA,4BAAQvB,UAAU,uBAAuBa,KAAK,SAASN,QAAST,KAAKsC,cAArE,sB,GAvDc3B,aA+DTC,cAAWyB,GCzDpBI,E,2MACJC,iBAAmB,SAACC,GAClB,EAAKlD,MAAMmD,WAAWD,I,wEAGd,IAAD,OACCE,EAAS7C,KAAKP,MAAdoD,KACR,OACE,kBAAC,IAAD,CAAQC,SAAS,YACf,0BAAM5C,UAAU,QACd,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBAAiBO,QAAS,kBAAM,EAAKiC,iBAAiB,UAArE,OACA,yBAAKxC,UAAU,kBAAkBO,QAAS,kBAAM,EAAKiC,iBAAiB,WAAtE,SACA,yBAAKxC,UAAU,iBAAiBO,QAAS,kBAAM,EAAKiC,iBAAiB,UAArE,QACA,yBAAKxC,UAAU,oBAAoBO,QAAS,kBAAM,EAAKiC,iBAAiB,aAAxE,aAEF,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWC,IACrC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,IAChC,kBAAC,IAAD,CACEH,KAAK,gBACLI,OAAQ,kBAAM,kBAACC,EAAD,CAASC,YAAa,EAAKC,iBAE3C,kBAAC,IAAD,CAAOP,KAAK,WAAWC,UAAWO,IACvB,SAATX,EAAkB,kBAAC,IAAD,CAAUY,GAAG,MAAS,KAC/B,SAATZ,EAAkB,kBAAC,IAAD,CAAUY,GAAG,UAAa,KACnC,UAATZ,EAAmB,kBAAC,IAAD,CAAUY,GAAG,WAAc,KACrC,YAATZ,EAAqB,kBAAC,IAAD,CAAUY,GAAG,aAAgB,W,GA3B5C9C,aA0CH+C,eARS,SAAAhE,GAAK,MAAK,CAChCmD,KAAMnD,EAAMmD,SAGa,SAAAc,GAAQ,MAAK,CACtCf,WAAY,SAAAD,GAAQ,OAAIgB,EC7CS,CAAE5C,KCJV,cDI6B8B,KD6CVF,QAG/Be,CAA6CjB,GGzCxCmB,QACW,cAA7B1C,OAAOc,SAAS6B,UAEe,UAA7B3C,OAAOc,SAAS6B,UAEhB3C,OAAOc,SAAS6B,SAASC,MACvB,2DChBN,IAAMpE,EAAQ,CACZmD,KAAM3B,OAAO6C,aAAaC,QAAQ,UAAY,QAmBjCC,EAhBC,WAAkC,IAAjCC,EAAgC,uDAAlBxE,EAAOyE,EAAW,uCAC/C,OAAQA,EAAOpD,MACb,IFRqB,YESnB,MAAO,CACL8B,KAAMsB,EAAOtB,MAEjB,IFXuB,cEarB,OADA3B,OAAO6C,aAAaK,QAAQ,QAASD,EAAOtB,MACrC,CACLA,KAAMsB,EAAOtB,MAEjB,QACE,OAAOqB,ICRPG,EAAQC,YAAYL,GAE1BM,IAASnB,OACP,kBAAC,IAAD,CAAUiB,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJG,SAASC,eAAe,SF+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjF,MAAK,SAAAkF,GACjCA,EAAaC,iB,6EGnInBC,EAAOC,QAAU,IAA0B,+C","file":"static/js/main.699586c5.chunk.js","sourcesContent":["const axios = require('axios');\n\nconst baseUrl = 'https://qootest.com/posts/'\n\nexport const getPosts = () => axios.get(baseUrl)\n\nexport const getPost = postId => axios.get(`${baseUrl}${postId}`)\n\nexport const putPost = (postId, title, author, body) => axios.put(`${baseUrl}${postId}`, {\n                                                          title: title,\n                                                          author: author,\n                                                          body: body\n                                                        })\n\nexport const deletePost = postId => axios.delete(`${baseUrl}${postId}`)\n\nexport const addPost = (title, author, body) => axios.post('https://qootest.com/posts', {\n                                                  title,\n                                                  author,\n                                                  body\n                                                })","/* eslint-disable react/prop-types */\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport { getPosts } from '../WebAPI';\n\n\nclass BlogList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: [],\n    };\n  }\n\n  componentDidMount() {\n    getPosts()\n      .then(response => this.setState({\n        post: response.data.reverse(), // 讓之後文章顯示由新到舊\n      }));\n  }\n\n  render() {\n    const { post } = this.state;\n    const { history } = this.props;\n    return (\n      <Router>\n        <img className=\"blog__list-img\" src={require('../background-image.jpg')} alt=\"substitute\" />\n        <section className=\"blog__list\">\n          <div className=\"blog__list-title\">\n            <span className=\"fas fa-list-ul\" />\n              文章列表\n          </div>\n          {\n              post.map(item => (\n                <div className=\"blog__list-body\" key={item.id} onClick={() => { history.push(`/post/${item.id}`); }}>\n                  <div className=\"blog__list-body-title\">{item.title}</div>\n                  <div className=\"blog__list-body-line\" />\n                  <div className=\"blog__list-body-content\">{item.body}</div>\n                  <div className=\"blog__list-readmore\">Read more</div>\n                </div>\n              ))\n            }\n        </section>\n      </Router>\n    );\n  }\n}\n\n\nexport default withRouter(BlogList);\n","/* eslint-disable react/prop-types */\n\nimport React, { Component, Fragment } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { withRouter } from 'react-router-dom';\nimport { getPost, putPost, deletePost } from '../WebAPI';\n\n\nclass BlogArticle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: [],\n      isEdit: false,\n    };\n  }\n\n  componentDidMount() {\n    const { history } = this.props;\n    const id = (history.location.pathname).replace('/post/', '');\n    getPost(id)\n      .then(response => this.setState({\n        post: response.data,\n      }));\n  }\n\n  handleEditSwitch = (type) => {\n    const { post, isEdit } = this.state;\n    if (type === 'cancel') {\n      getPost(post.id)\n        .then(response => this.setState({\n          post: response.data,\n        }));\n    }\n    this.setState({\n      isEdit: !isEdit,\n    });\n  }\n\n  handleDelete = () => {\n    const { history } = this.props;\n    const { post } = this.state;\n    if (window.confirm('確定要刪除嗎')) {\n      deletePost(post.id)\n        .then(() => {\n          alert('刪除成功');\n          history.push('/post');\n        })\n        .catch((err) => {\n          alert('刪除失敗，請稍後再試');\n          console.log(err);\n        });\n    }\n  }\n\n  handleInputChange = (e) => {\n    const { post } = this.state;\n    const { value } = e.target;\n    const { name } = e.target;\n    this.setState({\n      post: { ...post, [name]: value },\n    });\n  }\n\n  handleEditSubmit = (e) => {\n    e.preventDefault();\n    const { post } = this.state;\n    putPost(post.id, post.title, post.author, post.body)\n      .catch((err) => {\n        alert('更新失敗，請稍後再試');\n        console.log(err);\n      });\n    // 看是否要改成新增成功才 setState，需研究要如何在 promise 裡 setState\n    this.setState({\n      isEdit: false,\n    });\n  }\n\n  render() {\n    const { post, isEdit } = this.state;\n    return (\n      <Fragment>\n        <img className=\"blog__article-img\" src=\"https://fakeimg.pl/1600x600/dbdbdb/?text=picture&font=bebas\" alt=\"substitute\" />\n        <section className=\"blog__article\">\n          <div className=\"blog__article-action\">\n            { isEdit\n              ? <a className=\"blog__article-canceledit\" onClick={() => this.handleEditSwitch('cancel')}>取消編輯</a>\n              : (\n                <div>\n                  <button className=\"blog__article-edit\" onClick={this.handleEditSwitch}>\n                    <i className=\"far fa-edit\" />\n                    編輯\n                  </button>\n                  <button className=\"blog__article-delete\" onClick={this.handleDelete}>\n                    <i className=\"far fa-trash-alt\" />\n                    刪除\n                  </button>\n                </div>\n              )\n            }\n          </div>\n          { isEdit ? (\n            <div>\n              標題：\n              <input className=\"blog__article-edittitle\" name=\"title\" value={post.title} onChange={this.handleInputChange} />\n            </div>\n          ) : <div className=\"blog__article-title\">{post.title ? post.title : 'Loading...'}</div> }\n          { isEdit ? (\n            <div>\n作者：\n              <input className=\"blog__article-editauthor\" name=\"author\" value={post.author} onChange={this.handleInputChange} />\n            </div>\n          ) : (\n            <div className=\"blog__article-author\">\n              <i className=\"fas fa-user\" />\n              {post.author ? post.author : '匿名'}\n            </div>\n          ) }\n          { isEdit ? (\n            <div>\n內容：\n              <textarea className=\"blog__article-editbody\" name=\"body\" value={post.body} onChange={this.handleInputChange} />\n            </div>\n          ) : <div className=\"blog__article-body\"><ReactMarkdown source={post.body} /></div> }\n          { isEdit ? <button className=\"blog__article-editsubmit\" type=\"submit\" onClick={this.handleEditSubmit}>送出</button> : null }\n        </section>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default withRouter(BlogArticle);\n","import React, { Fragment } from 'react';\n\n\nfunction BlogAbout() {\n  return (\n    <Fragment>\n      <section className=\"blog__about\">\n        <img className=\"blog__about-img\" src=\"https://fakeimg.pl/1200x1200/dbdbdb/?text=picture&font=bebas\" alt=\"station\" />\n        <div className=\"blog__about-content\">哩後，關於我關於我關於我甘魚我</div>\n      </section>\n    </Fragment>\n  );\n}\n\n\nexport default BlogAbout;\n","import React, { Fragment, Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { addPost } from '../WebAPI';\n\n\nclass BlogAbout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      author: '',\n      body: '',\n    };\n  }\n\n  handleInputChange = (e) => {\n    const { value } = e.target;\n    const { name } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { history } = this.props;\n    const { title, author, body } = this.state;\n    addPost(title, author, body)\n      .then(() => {\n        alert('新增成功');\n        history.push('/post');\n      })\n      .catch((err) => {\n        alert('新增失敗，請稍後再試');\n        console.log(err);\n      });\n  }\n\n  render() {\n    const { title, author, body } = this.state;\n    return (\n      <Fragment>\n        <form className=\"blog__addpost\" method=\"POST\">\n          <div className=\"blog__addpost-title\">\n            <i className=\"far fa-plus-square\" />\n              新增文章\n          </div>\n          <div>\n            標題：\n            <input className=\"blog__addpost-articletitle\" placeholder=\"輸入文章標題\" name=\"title\" value={title} onChange={this.handleInputChange} />\n          </div>\n          <div>\n            作者：\n            <input className=\"blog__addpost-author\" placeholder=\"輸入你的大名\" name=\"author\" value={author} onChange={this.handleInputChange} />\n          </div>\n          <div>\n            內容：\n            <textarea className=\"blog__addpost-body\" placeholder=\"文章內容\" name=\"body\" value={body} onChange={this.handleInputChange} />\n          </div>\n          <br />\n          <button className=\"blog__addpost-submit\" type=\"submit\" onClick={this.handleSubmit}>送出</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default withRouter(BlogAbout);\n","import React, { Component } from 'react';\nimport './index.sass';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport List from './components/List';\nimport Article from './components/Article';\nimport About from './components/About';\nimport AddArticle from './components/AddPost';\nimport { changePage } from './actions';\n\n\nclass App extends Component {\n  handleChangePage = (pageText) => {\n    this.props.updatePage(pageText);\n  }\n\n  render() {\n    const { page } = this.props;\n    return (\n      <Router basename=\"Blog-SPA\">\n        <main className=\"blog\">\n          <nav className=\"blog__nav\">\n            <div className=\"blog__nav-name\" onClick={() => this.handleChangePage('home')}>LYU</div>\n            <div className=\"blog__nav-about\" onClick={() => this.handleChangePage('about')}>About</div>\n            <div className=\"blog__nav-list\" onClick={() => this.handleChangePage('list')}>List</div>\n            <div className=\"blog__nav-addpost\" onClick={() => this.handleChangePage('addPost')}>Add Post</div>\n          </nav>\n          <Route exact path=\"/\" component={List} />\n          <Route exact path=\"/post\" component={List} />\n          <Route path=\"/about\" component={About} />\n          <Route\n            path=\"/post/:postId\"\n            render={() => <Article updataState={this.updateState} />}\n          />\n          <Route path=\"/addpost\" component={AddArticle} />\n          { page === 'home' ? <Redirect to=\"/\" /> : null }\n          { page === 'list' ? <Redirect to=\"/post\" /> : null }\n          { page === 'about' ? <Redirect to=\"/about\" /> : null }\n          { page === 'addPost' ? <Redirect to=\"/addpost\" /> : null }\n        </main>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  page: state.page,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updatePage: pageText => dispatch(changePage(pageText)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { INIT_PAGE, CHANGE_PAGE } from './actionTypes';\n\n// action creators\nexport const initPage = page => ({ type: INIT_PAGE, page });\n\nexport const changePage = page => ({ type: CHANGE_PAGE, page });\n","export const INIT_PAGE = 'INIT_PAGE';\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { INIT_PAGE, CHANGE_PAGE } from './actionTypes';\n\nconst state = {\n  page: window.localStorage.getItem('store') || 'home',\n};\n\nconst reducer = (globalState = state, action) => {\n  switch (action.type) {\n    case INIT_PAGE:\n      return {\n        page: action.page,\n      };\n    case CHANGE_PAGE:\n      window.localStorage.setItem('store', action.page);\n      return {\n        page: action.page,\n      };\n    default:\n      return globalState;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducer';\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background-image.81b52042.jpg\";"],"sourceRoot":""}